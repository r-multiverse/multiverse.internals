% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/freeze_dependencies.R
\name{freeze_dependencies}
\alias{freeze_dependencies}
\title{Freeze dependencies}
\usage{
freeze_dependencies(path_staging, path_community)
}
\arguments{
\item{path_staging}{Character string, directory path to the source
files of the Staging universe.}
}
\value{
\code{NULL} (invisibly)
}
\description{
Freeze the targeted versions of base R and CRAN packages.
}
\details{
\code{\link[=freeze_dependencies]{freeze_dependencies()}} runs during the month-long
dependency freeze phase of Staging in which base R and CRAN packages
are locked in the Staging universe until after the next Production
snapshot. This establishes checks in the Staging universe
using the exact set of dependencies that will be used in the
candidate freeze (see \code{\link[=stage_candidates]{stage_candidates()}}).

\code{\link[=freeze_dependencies]{freeze_dependencies()}} copies the Community repository \code{packages.json}
into the Staging repository to reset the Staging process.
It also writes a \code{config.json} file with the date
of the targeted CRAN snapshot.
}
\examples{
\dontrun{
url_staging = "https://github.com/r-multiverse/staging"
url_community = "https://github.com/r-multiverse/community"
path_staging <- tempfile()
path_community <- tempfile()
gert::git_clone(url = url_staging, path = path_staging)
gert::git_clone(url = url_community, path = path_community)
freeze_dependencies(
  path_staging = path_staging,
  path_community = path_community
)
}
}
\seealso{
Other staging: 
\code{\link{filter_packages}()},
\code{\link{rclone_includes}()},
\code{\link{stage_candidates}()}
}
\concept{staging}
