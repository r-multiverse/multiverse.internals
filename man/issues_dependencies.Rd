% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/issues_dependencies.R
\name{issues_dependencies}
\alias{issues_dependencies}
\title{Report package dependency issues}
\usage{
issues_dependencies(packages, meta = meta_packages(), verbose = FALSE)
}
\arguments{
\item{packages}{Character vector of names of packages with other issues.}

\item{meta}{Package metadata from \code{\link[=meta_packages]{meta_packages()}}.}

\item{verbose}{\code{TRUE} to print progress while checking
dependency status, \code{FALSE} otherwise.}
}
\value{
A data frame with one row for each package impacted by
upstream dependencies.
Each element of the \code{dependencies} column is a
nested list describing the problems upstream.

To illustrate the structure of this list, suppose
Package \code{tarchetypes} depends on package \code{targets}, and packages
\code{jagstargets} and \code{stantargets} depend on \code{tarchetypes}.
In addition, package \code{targets} has a problem in \verb{R CMD check}
which might cause problems in \code{tarchetypes} and packages downstream.

\code{status_dependencies()} represents this information in the
following list:

\if{html}{\out{<div class="sourceCode">}}\preformatted{list(
  jagstargets = list(targets = "tarchetypes"),
  tarchetypes = list(targets = character(0)),
  stantargets = list(targets = "tarchetypes")
)
}\if{html}{\out{</div>}}

In general, the returned list is of the form:

\if{html}{\out{<div class="sourceCode">}}\preformatted{list(
  impacted_reverse_dependency = list(
    upstream_culprit = c("direct_dependency_1", "direct_dependency_2")
  )
)
}\if{html}{\out{</div>}}

where \code{upstream_culprit} causes problems in \code{impacted_reverse_dependency}
through direct dependencies \code{direct_dependency_1} and
\code{direct_dependency_2}.
}
\description{
Flag packages which have issues in their strong dependencies
(\verb{Imports:}, \verb{Depends:}, and \verb{LinkingTo:} in the \code{DESCRIPTION}.)
These include indirect/upstream dependencies, as well, not just
the explicit mentions in the \code{DESCRIPTION} file.
}
\examples{
  meta <- meta_packages(repo = "https://wlandau.r-universe.dev")
  issues_dependencies(packages = character(0L), meta = meta)
  issues_dependencies(packages = "crew.aws.batch", meta = meta)
  issues_dependencies(packages = "nanonext", meta = meta)
  issues_dependencies(packages = "crew", meta = meta)
  issues_dependencies(packages = c("crew", "mirai"), meta = meta)
}
\seealso{
Other issues: 
\code{\link{issues_advisories}()},
\code{\link{issues_licenses}()},
\code{\link{issues_r_cmd_check}()},
\code{\link{issues_remotes}()},
\code{\link{issues_version_conflicts}()},
\code{\link{issues_versions}()}
}
\concept{issues}
