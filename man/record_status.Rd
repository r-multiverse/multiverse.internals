% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/record_status.R
\name{record_status}
\alias{record_status}
\title{Record package status.}
\usage{
record_status(
  repo = "https://community.r-multiverse.org",
  versions = "versions.json",
  output = "status.json",
  mock = NULL,
  verbose = FALSE
)
}
\arguments{
\item{repo}{URL of the repository to query.}

\item{versions}{Character of length 1, file path to a JSON manifest
tracking the history of released versions of packages.}

\item{output}{Character of length 1, file path to the JSON file to record
new package status. Each call to \code{record_status()} overwrites the
contents of the file.}

\item{mock}{For testing purposes only, a named list of data frames
for inputs to various intermediate functions.}

\item{verbose}{\code{TRUE} to print progress while checking
dependency status, \code{FALSE} otherwise.}
}
\value{
\code{NULL} (invisibly).
}
\description{
Record R-multiverse package status in
package-specific JSON files.
}
\section{Package status}{

Functions like \code{\link[=issues_versions]{issues_versions()}} and \code{\link[=issues_r_cmd_check]{issues_r_cmd_check()}}
perform health checks for all packages in R-multiverse.
For a complete list of checks, see
the \verb{issues_*()} functions listed at
\url{https://r-multiverse.org/multiverse.internals/reference/index.html}.
\code{\link[=record_versions]{record_versions()}} updates the version number history
of releases in R-multiverse, and \code{\link[=record_status]{record_status()}} gathers
together all the status about R-multiverse packages.
}

\examples{
\dontrun{
output <- tempfile()
versions <- tempfile()
record_versions(
  versions = versions,
  repo = repo
)
record_status(
  repo = repo,
  versions = versions,
  output = output
)
writeLines(readLines(output))
}
}
\keyword{check}
\keyword{data}
\keyword{management}
\keyword{package}
