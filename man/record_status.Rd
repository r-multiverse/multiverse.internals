% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/record_status.R
\name{record_status}
\alias{record_status}
\title{Record package status.}
\usage{
record_status(
  repo = "https://community.r-multiverse.org",
  versions = "versions.json",
  output = "status.json",
  mock = NULL,
  verbose = FALSE
)
}
\arguments{
\item{repo}{URL of the repository to query.}

\item{versions}{Character of length 1, file path to a JSON manifest
tracking the history of released versions of packages.}

\item{output}{Character of length 1, file path to the JSON file to record
new package status. Each call to \code{record_status()} overwrites the
contents of the file.}

\item{mock}{For testing purposes only, a named list of data frames
for inputs to various intermediate functions.}

\item{verbose}{\code{TRUE} to print progress while checking
dependency status, \code{FALSE} otherwise.}
}
\value{
\code{NULL} (invisibly).
}
\description{
Record R-multiverse package status in
package-specific JSON files.
}
\section{Package status}{

Functions like \code{\link[=status_versions]{status_versions()}} and \code{\link[=status_descriptions]{status_descriptions()}}
perform health checks for all packages in R-multiverse.
For a complete list of checks, see
the \verb{status_*()} functions listed at
\url{https://r-multiverse.org/multiverse.internals/reference/index.html}.
\code{\link[=record_versions]{record_versions()}} updates the version number history
of releases in R-multiverse, and \code{\link[=record_status]{record_status()}} gathers
together all the status about R-multiverse packages.
}

\section{Status data}{

For each package with observed problems, \code{\link[=record_status]{record_status()}} writes
a JSON list entry in the output JSON file
with one element for each type of failing check.
Each check-specific element has an informative name
(for example, \code{checks}, \code{descriptions}, or \code{versions})
and a list of diagnostic information. In addition, there is a \code{date}
field to indicate when an issue was first detected. The \code{date}
automatically resets the next time all the status in the package
are resolved.
}

\examples{
  repo <- "https://wlandau.r-universe.dev"
  output <- tempfile()
  versions <- tempfile()
  record_versions(
    versions = versions,
    repo = repo
  )
  record_status(
    repo = repo,
    versions = versions,
    output = output
  )
  writeLines(readLines(output))
}
\keyword{check}
\keyword{data}
\keyword{management}
\keyword{package}
